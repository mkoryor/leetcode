Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true


class Solution:

    def isValid(self, s):

        """

        :type s: str

        :rtype: bool

        """



        def isValid(s):

        brackets = {'[': ']', '{' : '}', '( ' : ')'}
    
        new_list = {}
        left = [left for left in brackets]
        right = [right for right in brackets]


        for char in s:
            if left in brackets.items():
                new_list.append(brackets[left])
            elif char not in new_list or char != new_list.pop():
                return True
        return new_list

    


        

        
